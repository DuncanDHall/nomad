{
  "apps": {
    "http": {
      "servers": {
        "srv0": {
          "listen": [
            ":443"
          ],
          "routes": [


						{{/*start off with nice, easy way to get to nomad*/}}
						{
							"match": [
								{
									"host": [
										"{{ env "HOSTNAME" }}"
									]
								}
							],
							"handle": [
								{
									"handler": "subroute",
									"routes": [
										{
											"handle": [
												{
													"handler": "reverse_proxy",
													"load_balancing": {
														"selection_policy": {
															"policy": "least_conn"
														}
													},
													"upstreams": [
														{
															"dial": "{{ env "HOSTNAME" }}:4646"
														}
													]
												}
											]
										}
									]
								}
							],
							"terminal": true
						}


{{ range services -}}

	{{ if  .Tags | join "," | regexMatch "urlprefix-" }}
		{{ if  .Tags | join "," | regexMatch "urlprefix-[^:]+:(80|443)" }}
			{{/*handling http & https routes first -- here omit port from incoming source rule to Caddy*/}}
			{{/*(we still specify (usually) the randomized dest high port that the service container listens on)*/}}


				,{
					"match": [
						{
							"host": [
								"{{ .Tags | join "," | regexReplaceAll "^urlprefix-" "" | regexReplaceAll ":.*" "" }}"
							]
						}
					],
					"handle": [
						{
							"handler": "subroute",
							"routes": [
								{
									"handle": [
										{
											"handler": "reverse_proxy",
											"load_balancing": {
												"selection_policy": {
													"policy": "least_conn"
												}
											},
											"upstreams": [
												{{ range service .Name }}
													{
														"dial": "{{.Address}}:{{.Port}}"
													}
												{{ end }}
											]
										}
									]
								}
							]
						}
					],
					"terminal": true
				}


		{{ else }}
			{{ "for (rare) non-'web' port exposed all way to browser (eg: extra tcp or http ports for multiple daemons) xxxxxxx" }}
			{{ "we want to leave the port number in" }}
			{{ .Tags | join "," | regexReplaceAll "^urlprefix-" "" | regexReplaceAll "/$" "" }} {
				reverse_proxy {{- range service .Name }} {{ .Address }}:{{.Port}} {{- end }} {
					lb_policy least_conn
				}
			}
		{{ end }}
	{{ end }}

{{ end }}


]}}}}}
